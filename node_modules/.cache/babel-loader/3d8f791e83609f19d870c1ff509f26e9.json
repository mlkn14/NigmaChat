{"ast":null,"code":"import \"antd-mobile/lib/card/style/css\";\nimport _Card from \"antd-mobile/lib/card\";\nvar _jsxFileName = \"C:\\\\Users\\\\ASUS TUF GAMING\\\\Downloads\\\\realtime-chatting-main\\\\src\\\\containers\\\\MessageDetail\\\\index.jsx\";\nimport React, { Component } from 'react';\nimport { reqMessage } from '../../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar promise = null;\nexport default class MessageDetail extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      message: {}\n    };\n  }\n\n  componentDidMount() {\n    const pathname = this.props.location.pathname;\n    const msgid = pathname.substring(9, pathname.length);\n    promise = reqMessage({\n      msgid\n    });\n    promise.then(value => {\n      this.setState({\n        message: value.data\n      });\n    });\n  }\n\n  componentWillUnmount() {\n    if (promise) {\n      Promise.race([promise, Promise.resolve()]);\n    }\n  }\n\n  render() {\n    const {\n      message\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(_Card, {\n      children: [/*#__PURE__*/_jsxDEV(_Card.Header, {\n        title: message.from,\n        extra: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: message.time\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 28\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"msg-content\",\n        style: {\n          margin: '1em',\n          wordWrap: \"break-word\"\n        },\n        children: message.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/ASUS TUF GAMING/Downloads/realtime-chatting-main/src/containers/MessageDetail/index.jsx"],"names":["React","Component","reqMessage","promise","MessageDetail","state","message","componentDidMount","pathname","props","location","msgid","substring","length","then","value","setState","data","componentWillUnmount","Promise","race","resolve","render","from","time","margin","wordWrap","content"],"mappings":";;;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,UAAT,QAA2B,WAA3B;;AAEA,IAAIC,OAAO,GAAG,IAAd;AACA,eAAe,MAAMC,aAAN,SAA4BH,SAA5B,CAAsC;AAAA;AAAA;AAAA,SACjDI,KADiD,GACzC;AACJC,MAAAA,OAAO,EAAE;AADL,KADyC;AAAA;;AAKjDC,EAAAA,iBAAiB,GAAE;AACf,UAAMC,QAAQ,GAAG,KAAKC,KAAL,CAAWC,QAAX,CAAoBF,QAArC;AACA,UAAMG,KAAK,GAAGH,QAAQ,CAACI,SAAT,CAAmB,CAAnB,EAAsBJ,QAAQ,CAACK,MAA/B,CAAd;AACAV,IAAAA,OAAO,GAAGD,UAAU,CAAC;AAACS,MAAAA;AAAD,KAAD,CAApB;AACAR,IAAAA,OAAO,CAACW,IAAR,CAAaC,KAAK,IAAE;AAChB,WAAKC,QAAL,CAAc;AAACV,QAAAA,OAAO,EAAES,KAAK,CAACE;AAAhB,OAAd;AACH,KAFD;AAGH;;AAEDC,EAAAA,oBAAoB,GAAE;AAClB,QAAGf,OAAH,EAAW;AACPgB,MAAAA,OAAO,CAACC,IAAR,CAAa,CAACjB,OAAD,EAAUgB,OAAO,CAACE,OAAR,EAAV,CAAb;AACH;AACJ;;AAEDC,EAAAA,MAAM,GAAG;AAEL,UAAM;AAAChB,MAAAA;AAAD,QAAY,KAAKD,KAAvB;AACA,wBACI;AAAA,8BACI,cAAM,MAAN;AACI,QAAA,KAAK,EAAEC,OAAO,CAACiB,IADnB;AAEI,QAAA,KAAK,eAAE;AAAA,oBAAOjB,OAAO,CAACkB;AAAf;AAAA;AAAA;AAAA;AAAA;AAFX;AAAA;AAAA;AAAA;AAAA,cADJ,eAKI;AAAG,QAAA,EAAE,EAAC,aAAN;AAAoB,QAAA,KAAK,EAAE;AAACC,UAAAA,MAAM,EAAE,KAAT;AAAgBC,UAAAA,QAAQ,EAAE;AAA1B,SAA3B;AAAA,kBACKpB,OAAO,CAACqB;AADb;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAWH;;AAlCgD","sourcesContent":["import { Card } from 'antd-mobile'\r\nimport React, { Component } from 'react'\r\nimport { reqMessage } from '../../api'\r\n\r\nvar promise = null\r\nexport default class MessageDetail extends Component {\r\n    state = {\r\n        message: {}\r\n    }\r\n\r\n    componentDidMount(){\r\n        const pathname = this.props.location.pathname\r\n        const msgid = pathname.substring(9, pathname.length)\r\n        promise = reqMessage({msgid})\r\n        promise.then(value=>{\r\n            this.setState({message: value.data})\r\n        })\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        if(promise){\r\n            Promise.race([promise, Promise.resolve()])\r\n        }\r\n    }\r\n\r\n    render() {\r\n             \r\n        const {message} = this.state\r\n        return (\r\n            <Card>\r\n                <Card.Header\r\n                    title={message.from}\r\n                    extra={<span>{message.time}</span>}\r\n                />\r\n                <p id='msg-content' style={{margin: '1em', wordWrap: \"break-word\"}}>\r\n                    {message.content}\r\n                </p>\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}