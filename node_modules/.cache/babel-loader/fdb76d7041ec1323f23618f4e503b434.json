{"ast":null,"code":"import \"antd-mobile/lib/button/style/css\";\nimport _Button from \"antd-mobile/lib/button\";\nimport \"antd-mobile/lib/white-space/style/css\";\nimport _WhiteSpace from \"antd-mobile/lib/white-space\";\nimport \"antd-mobile/lib/input-item/style/css\";\nimport _InputItem from \"antd-mobile/lib/input-item\";\nimport \"antd-mobile/lib/nav-bar/style/css\";\nimport _NavBar from \"antd-mobile/lib/nav-bar\";\nimport \"antd-mobile/lib/toast/style/css\";\nimport _Toast from \"antd-mobile/lib/toast\";\nvar _jsxFileName = \"C:\\\\Users\\\\ASUS TUF GAMING\\\\Downloads\\\\realtime-chatting-main\\\\src\\\\containers\\\\Register\\\\index.jsx\";\nimport React, { Component } from 'react';\nimport { reqRegister } from '../../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar promise = null;\nexport default class Register extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      username: '',\n      // 用户名\n      password: '',\n      // 密码\n      password2: '' // 确认密码\n\n    };\n\n    this.handleChange = (name, val) => {\n      // 更新状态\n      this.setState({\n        [name]: val // 属性名不是name, 而是name变量的值\n\n      });\n    };\n\n    this.toLogin = () => {\n      this.props.history.replace('/login');\n    };\n\n    this.register = () => {\n      const {\n        username,\n        password,\n        password2\n      } = this.state;\n\n      if (username === '') {\n        // 用户名为空\n        _Toast.info('用户名不能为空！', 1); // 提示错误信息\n\n\n        return;\n      } else if (password === '') {\n        _Toast.info('密码不能为空！', 1); // 提示错误信息\n\n\n        return;\n      } else if (password2 === '') {\n        _Toast.info('请再次输入密码！', 1); // 提示错误信息\n\n\n        return;\n      } else if (password !== password2) {\n        _Toast.info('两次输入的密码不一致！', 1); // 提示错误信息\n\n\n        return;\n      }\n\n      promise = reqRegister({\n        username,\n        password\n      });\n      promise.then(value => {\n        const response = value.data; // {code:1, msg:'此用户已存在'}或者{code:0, data:{}}\n\n        if (response.code === 0) {\n          //注册成功\n          this.props.history.replace('/chat');\n        } else {\n          // 注册失败\n          _Toast.info(response.msg, 1);\n        }\n      });\n    };\n  }\n\n  componentWillUnmount() {\n    if (promise) {\n      Promise.race([promise, Promise.resolve()]);\n    }\n  } // 处理输入数据的改变: 更新对应的状态\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(_NavBar, {\n        children: \"\\u6CE8\\xA0\\u518C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(_InputItem, {\n        placeholder: \"\\u8BF7\\u8F93\\u5165\\u7528\\u6237\\u540D\",\n        onChange: val => {\n          this.handleChange('username', val);\n        },\n        children: \"username:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(_InputItem, {\n        placeholder: \"\\u8BF7\\u8F93\\u5165\\u5BC6\\u7801\",\n        type: \"password\",\n        onChange: val => {\n          this.handleChange('password', val);\n        },\n        children: \"password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(_InputItem, {\n        placeholder: \"\\u8BF7\\u8F93\\u5165\\u786E\\u8BA4\\u5BC6\\u7801\",\n        type: \"password\",\n        onChange: val => {\n          this.handleChange('password2', val);\n        },\n        children: \"confirm password:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(_WhiteSpace, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(_Button, {\n        type: \"primary\",\n        onClick: this.register,\n        children: \"\\u6CE8\\xA0\\xA0\\xA0\\u518C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(_Button, {\n        onClick: this.toLogin,\n        children: \"\\u5DF2\\u6709\\u8D26\\u6237\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/ASUS TUF GAMING/Downloads/realtime-chatting-main/src/containers/Register/index.jsx"],"names":["React","Component","reqRegister","promise","Register","state","username","password","password2","handleChange","name","val","setState","toLogin","props","history","replace","register","info","then","value","response","data","code","msg","componentWillUnmount","Promise","race","resolve","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport {NavBar,InputItem,WhiteSpace,Button,Toast} from 'antd-mobile'\r\nimport {reqRegister} from '../../api'\r\n\r\nvar promise = null\r\nexport default class Register extends Component {\r\n    state = {\r\n        username: '',  // 用户名\r\n        password: '',  // 密码\r\n        password2: ''  // 确认密码\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        if(promise){\r\n            Promise.race([promise, Promise.resolve()])\r\n        }\r\n    }\r\n\r\n    // 处理输入数据的改变: 更新对应的状态\r\n    handleChange = (name, val) => {\r\n        // 更新状态\r\n        this.setState({\r\n            [name]: val  // 属性名不是name, 而是name变量的值\r\n        })\r\n    }\r\n\r\n    toLogin = () => {\r\n        this.props.history.replace('/login')\r\n    }\r\n\r\n    register = ()=>{\r\n        const {username, password, password2} = this.state\r\n        if(username===''){// 用户名为空\r\n            Toast.info('用户名不能为空！', 1);// 提示错误信息\r\n            return\r\n        }else if(password===''){\r\n            Toast.info('密码不能为空！', 1);// 提示错误信息\r\n            return\r\n        }else if(password2===''){\r\n            Toast.info('请再次输入密码！', 1);// 提示错误信息\r\n            return\r\n        }else if(password!==password2){\r\n            Toast.info('两次输入的密码不一致！', 1);// 提示错误信息\r\n            return\r\n        }\r\n\r\n        promise = reqRegister({username, password})\r\n        promise.then(value=>{\r\n            const response = value.data// {code:1, msg:'此用户已存在'}或者{code:0, data:{}}\r\n            if(response.code===0){//注册成功\r\n                this.props.history.replace('/chat')\r\n            }else{// 注册失败\r\n                Toast.info(response.msg, 1)\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <NavBar>注&nbsp;册</NavBar>\r\n                <InputItem placeholder='请输入用户名' onChange={val => {this.handleChange('username', val)}}>username:</InputItem>\r\n                <InputItem placeholder='请输入密码' type=\"password\" onChange={val => {this.handleChange('password', val)}}>password</InputItem>\r\n                <InputItem placeholder='请输入确认密码' type=\"password\" onChange={val => {this.handleChange('password2', val)}}>confirm password:</InputItem>\r\n\r\n                <WhiteSpace/>\r\n                <Button type='primary' onClick={this.register}>注&nbsp;&nbsp;&nbsp;册</Button>\r\n                <Button onClick={this.toLogin}>已有账户</Button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}